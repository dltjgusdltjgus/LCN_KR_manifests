apiVersion: v1
kind: Namespace
metadata:
  name: prj-nginx # 새로운 네임스페이스 생성
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: prj-nginx
  name: deploy-nginx
spec:
  selector:
    matchLabels:
      app: nginx
  replicas: 2
  template:
    metadata:
      labels:
        app: nginx
    spec:
      topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
        labelSelector:
          matchLabels:
            app: nginx    
      containers:
      - name: nginx-prj
        image: 627994959940.dkr.ecr.ap-northeast-2.amazonaws.com/kr-ecr:n1.0
        imagePullPolicy: Always
        ports:
        - containerPort: 80
          protocol: TCP
        resources:
          limits:
            cpu: 500m
          requests:
            cpu: 200m
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-svc
  namespace: prj-nginx
spec:
  selector:
    app: nginx
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
  type: NodePort
---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: nginx-hpa
  namespace: prj-nginx
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: deploy-nginx
  minReplicas: 2
  maxReplicas: 60
  targetCPUUtilizationPercentage: 50
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: zigiingress
  namespace: prj-nginx
  annotations:
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:ap-northeast-2:627994959940:certificate/c0fffdf2-f230-42a0-8ead-370f41a25328
spec:
  ingressClassName: alb
  rules:
    - http:
        paths:
          - pathType: Prefix
            path: /
            backend:
              service:
                name: nginx-svc
                port:
                  number: 80


